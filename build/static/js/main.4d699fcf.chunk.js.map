{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","personService","getAll","axios","get","then","response","data","postNew","person","post","deletePerson","delete","id","putNum","put","Header","title","Filter","handler","text","onChange","Submit","type","Form","onSubmit","Numbers","persons","controller","map","name","number","onClick","payload","App","useState","toShow","getPersons","toAdd","toDelete","toEditNum","model","update","msg","preventDefault","newName","target","value","newNum","found","find","ele","undefined","alert","window","confirm","reset","val","filter","p","toLowerCase","includes","useEffect","_","e","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.4d699fcf.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAll =\n    () => {\n        const request = axios.get(baseUrl)\n        return request.then(response => response.data)\n    }\n\nconst postNew =\n    person => {\n        const request = axios.post(baseUrl, person)\n        return request.then(response => response.data)\n    }\n\nconst deletePerson =\n    person => {\n        const request = axios.delete(`${baseUrl}/${person.id}`)\n        return request.then(response => response.data)\n    }\n\nconst putNum =\n    person => {\n        const request = axios.put(`${baseUrl}/${person.id}`, person)\n        return request.then(response => response.data)\n    }\n\nconst personService = { getAll, postNew, deletePerson, putNum }\n\nexport default personService\n","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Header =\n    ({ title }) =>\n        <>\n            <h2>{title}</h2>\n        </>\n\nconst Filter =\n    ({ handler, text }) =>\n        <>\n            {text}: <input onChange={handler} />\n        </>\n\nconst Submit =\n    ({ type, text }) =>\n        <>\n            <button type={type}>\n                {text}\n            </button>\n        </>\n\nconst Form =\n    ({ handler }) =>\n        <>\n            <form onSubmit={handler}>\n                <div>\n                    name: <input />\n                </div>\n                <div>\n                    number: <input />\n                </div>\n                <div>\n                    <Submit\n                        type={\"submit\"}\n                        text={\"add\"}\n                    />\n                </div>\n            </form>\n        </>\n\nconst Numbers =\n    ({ persons, controller }) =>\n        <>\n            <ul>\n                {persons.map(person =>\n                    <li key={person.id}>\n                        {person.name} {person.number}\n                        <button onClick={() => controller({ type: \"DELETE\", payload: person })}>\n                            DELETE\n                        </button>\n                    </li>\n                )}\n            </ul>\n        </>\n\nconst App =\n    () => {\n        const init =\n            {\n                persons: [],\n                toShow: [],\n                getPersons: true,\n                toAdd: null,\n                toDelete: null,\n                toEditNum: null,\n            }\n        const [ model, update ] = useState(init)\n        useEffect(() => {\n            if (model.getPersons) {\n                personService\n                    .getAll()\n                    .then(persons => controller({ type: \"GET_PERSONS_SUCCESS\", payload: persons }))\n            }\n        }, [model.getPersons])\n        useEffect(() => {\n            if (model.toAdd) {\n                personService\n                    .postNew(model.toAdd)\n                    .then(person => controller({ type: \"POST_PERSON_SUCCESS\" }))\n            }\n        }, [model.toAdd])\n        useEffect(() => {\n            if (model.toDelete) {\n                personService\n                    .deletePerson(model.toDelete)\n                    .then(_ => controller({ type: \"DELETE_PERSON_SUCCESS\" }))\n            }\n        }, [model.toDelete])\n        useEffect(() => {\n            if (model.toEditNum) {\n                personService\n                    .putNum(model.toEditNum)\n                    .then(_ => controller({ type: \"PUT_PERSON_SUCCESS\" }))\n            }\n        }, [model.toEditNum])\n\n        function controller(msg) {\n            switch (msg.type) {\n                case \"SUBMIT\": {\n                    msg.payload.preventDefault()\n                    const newName = msg.payload.target[0].value\n                    const newNum = msg.payload.target[1].value\n                    const found = model.persons.find(ele => ele.name === newName)\n                    if (newName === \"\" || newName === undefined) {\n                        alert(\"Stop that!\")\n                        update({...model})\n                    } else if (found) {\n                        if (window.confirm(`Want to edit ${newName}'s number?`)) {\n                            update({...model, toEditNum: { name: newName, number: newNum, id: found.id }})\n                        } else {\n                            update({...model})\n                        }\n                    } else {\n                        update({...model, toAdd: { name: newName, number: newNum }})\n                    }\n                    msg.payload.target.reset()\n                    break\n                }\n                case \"FILTER\": {\n                    const val = msg.payload.target.value\n                    model.toShow =\n                        model.persons.filter(p => p.name.toLowerCase().includes(val.toLowerCase()))\n                    update({...model})\n                    break\n                }\n                case \"DELETE\": {\n                    if (window.confirm(`Delete ${msg.payload.name}`)) {\n                        update({...model, toDelete: msg.payload})\n                    }\n                    break\n                }\n                case \"GET_PERSONS_SUCCESS\": {\n                    model.persons = msg.payload\n                    update({...model, toShow: model.persons, getPersons: false})\n                    break\n                }\n                case \"POST_PERSON_SUCCESS\": {\n                    update({...model, getPersons: true, toAdd: null})\n                    break\n                }\n                case \"DELETE_PERSON_SUCCESS\": {\n                    update({...model, getPersons: true, toDelete: null})\n                    break\n                }\n                case \"PUT_PERSON_SUCCESS\": {\n                    update({...model, getPersons: true, toEditNum: null})\n                    break\n                }\n                default: {\n                    break\n                }\n            }\n        }\n\n        return (\n            <div>\n                <Header title={\"Phonebook\"} />\n                <Filter\n                    handler={e => controller({ type: \"FILTER\", payload: e })}\n                    text={\"filter\"}\n                />\n                <Header title={\"Add\"} />\n                <Form handler={e => controller({ type: \"SUBMIT\", payload: e })} />\n                <Header title={\"Numbers\"} />\n                <Numbers\n                    persons={model.toShow}\n                    controller={controller}\n                />\n            </div>\n        )\n    }\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />,\ndocument.getElementById('root'))\n"],"sourceRoot":""}